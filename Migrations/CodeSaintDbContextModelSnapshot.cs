// <auto-generated />
using CodeSaint.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeSaint.Migrations
{
    [DbContext(typeof(CodeSaintDbContext))]
    partial class CodeSaintDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeSaint.Models.Stock", b =>
                {
                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("DCF")
                        .HasColumnType("real");

                    b.Property<float>("Debt")
                        .HasColumnType("real");

                    b.Property<float>("EPS")
                        .HasColumnType("real");

                    b.Property<bool>("EarningsFlag")
                        .HasColumnType("bit");

                    b.Property<float>("EbitdaDCF")
                        .HasColumnType("real");

                    b.Property<float>("FCFGrowth")
                        .HasColumnType("real");

                    b.Property<float>("FiveYearHistoricalAverage")
                        .HasColumnType("real");

                    b.Property<float>("HeavyInvestingRate")
                        .HasColumnType("real");

                    b.Property<float>("InsiderHoldSellRate")
                        .HasColumnType("real");

                    b.Property<float>("MarketCap")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NetIncomeGrowth")
                        .HasColumnType("real");

                    b.Property<bool>("NewsFlag")
                        .HasColumnType("bit");

                    b.Property<float>("OneYearHistoricalAverage")
                        .HasColumnType("real");

                    b.Property<float>("PERatio")
                        .HasColumnType("real");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("PriceToCompetition")
                        .HasColumnType("real");

                    b.Property<float>("ProfitMarginGrowth")
                        .HasColumnType("real");

                    b.Property<float>("ROICGrowth")
                        .HasColumnType("real");

                    b.Property<bool>("RedditFlag")
                        .HasColumnType("bit");

                    b.Property<float>("RevenueGrowth")
                        .HasColumnType("real");

                    b.Property<string>("SuperInvestors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TenYearHistoricalAverage")
                        .HasColumnType("real");

                    b.Property<bool>("TwitterFlag")
                        .HasColumnType("bit");

                    b.HasKey("Ticker");

                    b.ToTable("Stocks", (string)null);
                });

            modelBuilder.Entity("CodeSaint.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
